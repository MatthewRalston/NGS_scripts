#!/home/mrals/.rvm/rubies/ruby-2.0.0-p247/bin/ruby
=begin
------------------------------------------------------------------------------
--                                                                          --
--                                MATTHEW RALSTON                           --
--                                                                          --
--                   A S S E M B L Y F I L T E R . R B                      --
--                                                                          --
------------------------------------------------------------------------------
-- TITLE                                                                    --
--                                                                          --
--  Copyright 2014 Matthew Ralston                                          --
--                                                                          --
------------------------------------------------------------------------------
-- This file is designed to filter a Cufflinks gtf assembly to transcripts  --
-- below a certain threshold. This script is designed with dense operons    --
-- of bacterial genomes in mind.					    --
--                                                                          --
------------------------------------------------------------------------------
=end

################################################
#
#               R E Q U I R E
#
################################################





################################################
#
#               U S E R    V A R I A B L E S
#
################################################


CUTOFF=2000


################################################
#
#               S U B - R O U T I N E S
#
################################################

################################################

################################################

def main
  while line = STDIN.gets
    temp=line.split
    # replace the Cufflinks gene_id with the gene_name of form CA_Nxxxx where N is the [C]hromosome or [P]lasmid
    newline=line.split(temp[9]).join(temp[15])
    STDOUT.puts(newline.chomp) if temp[4].to_i - temp[3].to_i <= CUTOFF and newline.include?("oId \"CA_")
  end
end




#*****************************************************************************#
################################################
#
#-----------------------------------------------
#
#                   M A I N
#-----------------------------------------------
#
################################################


main




##########################  E O F   ############################################
